plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'

	//docs 추가
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.jinsite'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt
}

repositories {
	mavenCentral()
}

//docs 추가
ext{
	asciidocVersion = "3.0.1"
	snippetsDir = file('build/generated-snippets')

}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//스프링 시큐리티 비밀번호 암호화 => 스크립토
	implementation 'org.springframework.security:spring-security-crypto'
	//스크립토만 하면 오류생겨서 검색 후 찾기
	implementation 'org.bouncycastle:bcprov-jdk15on:1.70'



	//JWT다운
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-gson:0.12.6'

	//스프링부트 어노테이션 컨피그레션 프로세서
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"


	//query 디펜던시 종속 설치
	//querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//docs 추가
	asciidoctorExt "org.springframework.restdocs:spring-restdocs-asciidoctor:${asciidocVersion}"
	testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc:${asciidocVersion}"

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}
//Querydsl 추가, 자동 생성된 Q클래스 gradle clean으로 제거
clean {
	delete file('src/main/generated')
}

tasks.named('test') {
	useJUnitPlatform()
}
//docs 추가
test {
	outputs.dir snippetsDir
}
//docs 추가
asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'
	dependsOn test
}
//docs 추가
bootJar {

	enabled = true

	dependsOn asciidoctor
	copy{
		from asciidoctor.outputDir
		into "src/main/resources/static/docs"
	}
}

jar{
	enabled = false
}